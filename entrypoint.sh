#!/usr/bin/env bash
set -euo pipefail

DOCS_DIR="${DOCS_DIR:-/docs}"
SITE_DIR="${SITE_DIR:-/site}"
PORT="${PORT:-3000}"
MODE="${MODE:-build}"

echo "Docusaurus container starting: MODE=$MODE, DOCS_DIR=$DOCS_DIR, SITE_DIR=$SITE_DIR, PORT=$PORT"

if [ ! -d "$DOCS_DIR" ]; then
  echo "Docs directory '$DOCS_DIR' does not exist or is not mounted. Exiting with code 1."
  exit 1
fi

mkdir -p "$SITE_DIR"

# If there's no package.json, create a minimal docusaurus project
if [ ! -f "$SITE_DIR/package.json" ]; then
  echo "Creating minimal Docusaurus project files in $SITE_DIR..."
  cat > "$SITE_DIR/package.json" <<'EOF'
{
  "name": "container-docusaurus-site",
  "private": true,
  "scripts": {
    "start": "docusaurus start",
    "build": "docusaurus build"
  },
  "dependencies": {
    "@docusaurus/core": "^3.6.0",
    "@docusaurus/preset-classic": "^3.6.0"
  }
}
EOF

  cat > "$SITE_DIR/docusaurus.config.js" <<'EOF'
module.exports = {
  title: process.env.SITE_TITLE || 'Docs',
  url: 'http://localhost',
  baseUrl: '/',
  onBrokenLinks: 'throw',
  onBrokenMarkdownLinks: 'warn',
  favicon: 'img/favicon.ico',
  presets: [
    [
      '@docusaurus/preset-classic',
      {
        docs: {
          path: 'docs',
          sidebarPath: require.resolve('./sidebars.js')
        },
        theme: {
          customCss: []
        }
      }
    ]
  ]
};
EOF

  cat > "$SITE_DIR/sidebars.js" <<'EOF'
module.exports = {
  tutorialSidebar: [{ type: 'autogenerated', dirName: '.' }],
};
EOF

  mkdir -p "$SITE_DIR/src/pages"
  echo "# Welcome\n\nThis site was created by the container. Replace the docs by mounting your Markdown folder to /docs." > "$SITE_DIR/src/pages/index.md"
fi

echo "Copying markdown from $DOCS_DIR into $SITE_DIR/docs..."
rm -rf "$SITE_DIR/docs"
mkdir -p "$SITE_DIR/docs"
cp -a "$DOCS_DIR"/. "$SITE_DIR/docs/" || true

cd "$SITE_DIR"

if [ ! -d node_modules ]; then
  echo "Installing npm dependencies (this may take a while on first run)..."
  npm install --no-audit --no-fund --prefer-offline
fi

if [ "$MODE" = "dev" ]; then
  echo "Starting Docusaurus in development mode (hot reload)..."
  # docusaurus start listens on 0.0.0.0 when --host passed; npm script will forward args
  npx docusaurus start --host 0.0.0.0 --port "$PORT"
else
  echo "Building static site..."
  npm run build
  echo "Serving static site on port $PORT..."
  npx http-server ./build -p "$PORT" -a 0.0.0.0
fi
